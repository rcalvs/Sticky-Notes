{"version":3,"sources":["Task.jsx","ToDo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Task","props","deleteTask","todos","length","className","map","todo","onClick","key","text","ToDo","useState","task","setTask","setTodos","onSubmit","event","preventDefault","newTodos","type","onChange","currentTask","target","value","Date","now","remove","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAgDeA,MA7Cf,SAAcC,GACZ,IAAQC,EAAeD,EAAfC,WAcR,OAA2B,IAAvBD,EAAME,MAAMC,OAEZ,wDAKF,qBAAKC,UAAU,WAAf,SACGJ,EAAME,MAAMG,KAAI,SAACC,GAAD,OACf,sBACEF,UAAU,iDADZ,UAIE,qBAAKA,UAAU,mCAAf,SACE,wBAAQG,QAAS,kBAAON,EAAWK,EAAKE,MAAxC,iBAEF,6BACGF,EAAKG,SANHH,EAAKE,WC2CLE,MAnEf,WAEA,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOT,EAAP,KAAcY,EAAd,KAmCE,OACE,sBAAKV,UAAU,WAAf,UACE,oBAAIA,UAAU,mCAAd,oCAGA,uBACEA,UAAU,6BACVW,SAhCR,SAAoBC,GAClBA,EAAMC,iBACN,IAAMC,EAAQ,CAAIN,GAAJ,mBAAaV,IAC3BY,EAASI,IA2BL,UAGE,uBACEd,UAAU,sCACVe,KAAK,OACLC,SA5CV,SAAiBJ,GACf,IAAMK,EAAc,CAClBZ,KAAMO,EAAMM,OAAOC,MACnBf,IAAKgB,KAAKC,OAEZZ,EAAQQ,MAyCF,wBACEjB,UAAU,sCADZ,6BAMF,cAAC,EAAD,CACEF,MAAOA,EAEPD,WArCW,SAACO,GAClB,IAAMkB,EAAS,YAAIxB,GAAOyB,QAAO,SAAAf,GAAI,OAAIA,EAAKJ,MAAQA,KACtDM,EAASY,UCpBIE,MARf,WACE,OACE,qBAAKxB,UAAU,uBAAf,SACE,cAAC,EAAD,OCOSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7372d811.chunk.js","sourcesContent":["import React from 'react';\nimport './ToDo.css';\n\nfunction Task(props) {  \n  const { deleteTask } = props;\n  // const [edit, setEdit] = useState({\n  //   id: null,\n  //   value: ''\n  // });\n\n  // const submitUpdate = (value) => {\n  //   props.editTask(edit.id, value);\n  //   setEdit({\n  //     id: null,\n  //     value: ''\n  //   });\n  // };\n\n  if (props.todos.length === 0) {\n    return (\n      <p>Adicione alguma tarefa!</p>\n    )\n  }\n\n  return (\n    <div className=\"flex m-8\">\n      {props.todos.map((todo) => (\n        <div\n          className=\"container m-2 w-40 h-40 bg-yellow-400 border-2\"\n          key={todo.key}\n        >\n          <div className=\"container w-38 h-8 bg-yellow-500\">\n            <button onClick={() => (deleteTask(todo.key))} >X</button>\n          </div>\n          <h3>\n            {todo.text}\n          </h3>\n            {/* <button onClick={() => (submitUpdate(todo.key))} >Editar</button> */}\n\n            {/* <div className=\"w-11 overflow-hidden inline-block bottom-0 right-0\">\n              <div className=\" h-24 bg-black rotate-45 transform origin-bottom-left\"></div>\n            </div> */}\n        </div>\n      ))}\n    </div>\n  );\n} \n\nexport default Task;\n","import React, { useState } from 'react';\nimport './ToDo.css';\n// import '../../App.css';\nimport Task from './Task';\n\nfunction ToDo() {\n\nconst [task, setTask] = useState({});\nconst [todos, setTodos] = useState([]);\n\nfunction addTask(event) {\n  const currentTask = {\n    text: event.target.value,\n    key: Date.now()\n  }\n  setTask(currentTask);\n}\n\nfunction submitTask(event) {\n  event.preventDefault();\n  const newTodos = [task, ...todos];\n  setTodos(newTodos);\n}\n\n// const completeTask = (key) => {\n//   // Mudar CSS\n// }\n\nconst deleteTask = (key) => {\n  const remove = [...todos].filter(task => task.key !== key)\n  setTodos(remove)\n}\n\n// const editTask = (key, value) => {\n//   const prevTodos = [todos];\n//   prevTodos.map((each) => {\n//     if (each.key === key) {\n//       each.text = value;\n//     }\n//   });\n//   setTodos(prev => prev.map(item => (item.key === key ? value : item)));\n// }\n\n  return (\n    <div className=\"flex-col\">\n      <h1 className=\"flex p-8 justify-center text-2xl\">\n        Minha Lista de Tarefas\n      </h1>\n      <form\n        className=\"flex m-auto justify-center\"\n        onSubmit={submitTask}>\n        <input\n          className=\"border-2 border-black rounded-tl-xl\"\n          type=\"text\"\n          onChange={addTask}\n        />\n        <button\n          className=\"border-2 border-black rounded-br-xl\"\n        >\n          Criar Tarefa\n        </button>\n      </form>\n      <Task\n        todos={todos}\n        // completeTask={completeTask}\n        deleteTask={deleteTask}\n        // editTask={editTask}\n      />\n    </div>\n  );\n} \n\nexport default ToDo;","import Todo from './ToDo.jsx'\n\nfunction App() {\n  return (\n    <div className=\"bg-blue-100 h-screen\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}